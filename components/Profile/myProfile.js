import { useRouter } from "next/router";

import LevelInfo from "./LevelInfoPopup/levelInfo";
import styles from "./myProfile.module.css";
import {
  DeleteIcon,
  IconArrowBack,
  TruckShippingIcon,
} from "../Ui/Icons/icons";
import { useState } from "react";
import Popup from "../Popup/popup";
import CheckboxCustom from "../Ui/CheckboxCustom/checkboxCustom";
import ButtonCustom from "../ButtonCustom";
import { useTranslation } from "react-i18next";

const ManageMyProfile = (props) => {
  const router = useRouter();
  const { t } = useTranslation();
  const [openDelivery, setOpenDelivery] = useState(false);
  const [defaultAddress, setDefaultAddress] = useState(true);
  const addresses = [
    {
      type: "회사",
      phone: "012-3456-7890",
      address: "서울특별시 강남구 테헤란로 111, 2층",
      default: true,
      addressType: "company",
    },
    {
      type: "집",
      phone: "012-3456-7890",
      address: "서울특별시 강남구 테헤란로 111, 2층",
      addressType: "home",
    },
    {
      type: "집",
      phone: "012-3456-7890",
      address: "서울특별시 강남구 테헤란로 111, 2층",
      addressType: "home",
    },
  ];

  const menus = [
    { label: "나의 쇼핑", icon: <IconShopping />, active: true },
    { label: "나의 포인트", icon: <IconHandStar />, href: "/profile/points" },
    { label: "나의 리뷰", icon: <IconBill />, href: "/profile/reviews" },
    {
      label: "주문/배송내역",
      icon: <IconTruck />,
      href: "/profile/order-delivery",
    },
    { label: "찜한 상품", icon: <IconHeart />, href: "/profile/wishlist" },
    { label: "나의 설정", icon: <IconSetting />, href: "/profile/settings" },
  ];

  return (
    <>
      {/* Header Mobile */}
      <div className={styles.container + " " + styles.headerMobile}>
        <div className={styles.header}>
          <div className={styles.avatar}></div>
          <div>
            <div className={styles.name}>테스트유저님</div>
            <div className={styles.email}>zxc123@gmail.com</div>
          </div>
        </div>
        <div className={styles.levelStyle}>
          <IconStarLevel />
          <span>LV 12</span>
        </div>
      </div>
      {/* Menu mobile */}
      <div className={styles.container + " " + styles.menuMobile}>
        {menus.map((menu, idx) => (
          <div
            key={idx}
            className={styles.menuItem}
            onClick={() => router.push(menu.href)}
          >
            <div
              className={`${styles.menuIcon} ${
                menu.active ? styles.menuActive : ""
              }`}
            >
              {menu.icon}
            </div>
            <div
              className={`${styles.menuLabel} ${
                menu.active ? styles.menuActiveText : ""
              }`}
            >
              {menu.label}
            </div>
          </div>
        ))}
      </div>
      {/* User */}
      <div className={styles.container + " " + styles.user}>
        <div className={styles.card}>
          {/* Header */}
          <div className={styles.header}>
            <div className={styles.avatar}></div>
            <div>
              <div className={styles.name}>
                테스트유저님
                <div className={styles.level}>
                  LV 12 <LevelInfo />
                </div>
              </div>
              <div className={styles.email}>zxc123@gmail.com</div>
            </div>
          </div>

          {/* Info list */}
          <div className={styles.info}>
            <div className={styles.item}>
              <SmileIcon />
              <span>홍길동</span>
            </div>
            <div className={styles.item}>
              <EmailIcon />
              <span>z*****23@gmail.com</span>
            </div>
            <div className={styles.item}>
              <PhoneIcon />
              <span>012-3456-7890</span>
            </div>
            <div className={styles.item}>
              <PasswordIcon />
              <span>************</span>
            </div>
          </div>
        </div>
      </div>
      {/* Address */}
      <div className={styles.container + " " + styles.address}>
        <div className={styles.addressHeader}>
          <div className={styles.addressHeaderInfo}>
            <span>배송지</span>
          </div>
          <p
            className={styles.detailButton}
            onClick={() => setOpenDelivery(true)}
          >
            배송지 추가
            <span>
              <IconArrowBack fill="var(--text-949494)" />
            </span>
          </p>
        </div>
        <div className={styles.addressList}>
          {addresses.map((addr, idx) => (
            <div key={idx} className={styles.addressCard}>
              <div className={styles.addressHeaderInfo}>
                <div className={styles.addressRow}>
                  <span className={styles.addressIcon}>
                    {addr.addressType === "home" ? (
                      <AddressHomeIcon />
                    ) : (
                      <AddressCompanyIcon />
                    )}
                  </span>
                  <span className={styles.addressType}>{addr.type}</span>
                  {addr.default && (
                    <span className={styles.addressBadge}>기본 배송지</span>
                  )}
                </div>
                <div className={styles.addressPhone}>{addr.phone}</div>
                <div className={styles.addressAddress}>{addr.address}</div>
              </div>
              <div className={styles.addressActions}>
                <button>기본 배송지</button>
                <button>삭제</button>
                <button className={styles.addressEdit}>수정</button>
              </div>
            </div>
          ))}
        </div>
      </div>
      {/* Popup add address */}
      <Popup
        open={openDelivery}
        onClose={() => setOpenDelivery(false)}
        title={t("새 배송지 추가")}
        content={
          <div>
            <div style={{ margin: "12px 0 12px" }}>
              <input
                name="addressName"
                placeholder={t("배송지명 (최대 10글자)")}
                className="without-border-bottom"
                style={{ borderTop: "none" }}
              ></input>
              <input
                name="receiverName"
                placeholder={t("수령인 (최대 10글자)")}
                className="without-border-bottom"
              ></input>
              <input name="phone" placeholder={t("휴대폰 번호")}></input>
            </div>
            <div style={{ margin: "0 0 12px" }}>
              <div style={{ position: "relative" }}>
                <input
                  placeholder={t("주소")}
                  className="without-border-bottom"
                ></input>
                <button
                  style={{
                    position: "absolute",
                    top: "50%",
                    right: "10px",
                    transform: "translateY(-50%)",
                    fontSize: "14px",
                    border: "1px solid var(--stroke-button)",
                    backgroundColor: "#F1F4F6",
                    color: "var(--text-121212)",
                    padding: "0 16px",
                    height: "30px",
                    borderRadius: "2px",
                  }}
                >
                  {t("주소검색")}
                </button>
              </div>
              <input placeholder={t("상세 주소")}></input>
            </div>
            <div style={{ padding: "16px 16px 44px" }}>
              <CheckboxCustom
                label={t("기본 배송지로 선택")}
                name="default"
                value="default"
                checked={defaultAddress}
                onChange={() => {
                  setDefaultAddress(!defaultAddress);
                  console.log(!defaultAddress);
                }}
              />
            </div>
          </div>
        }
        styleAction={{
          backgroundColor: "#fff",
        }}
        action={
          <div
            style={{
              display: "flex",
              gap: "10px",
            }}
          >
            <ButtonCustom
              text={t("취소")}
              onClick={() => setOpenDelivery(false)}
            />
            <ButtonCustom
              variant={"primary"}
              text={t("등록하기")}
              onClick={() => setOpenDelivery(false)}
            />
          </div>
        }
      />
      {/* Product Recents */}
      <div className={styles.container + " " + styles.productRecents}>
        <div className={styles.addressHeader}>
          <div className={styles.addressHeaderInfo}>
            <span>최근 본 상품</span>
          </div>
        </div>
        <div className={styles.productRecentsList}>
          <div>
            <div className={styles.recentDate}>2025.10.11</div>
            {Array.from({ length: 2 }).map((item, idx) => (
              <div className={styles.recentsItemList} key={item + idx}>
                <div className={styles.left}>
                  <div className={styles.productImage}>
                    <img
                      src={"/images/product_ex.png"}
                      alt={"title"}
                      width={97}
                      height={97}
                    />
                  </div>
                  <div className={styles.info}>
                    <p className={styles.title}>
                      MLB 뉴욕양키스 볼캡 모자 32CPHL111-50L
                    </p>
                    <div className={styles.priceBox}>
                      <p className={styles.oldPrice}>110,002원</p>
                      <p className={styles.discount}>
                        25%
                        <span className={styles.newPrice}>89,002원</span>
                      </p>
                      <p className={styles.truck}>
                        <TruckShippingIcon />
                        <span>무료배송</span>
                      </p>
                    </div>
                  </div>
                </div>

                <div className={styles.right}>
                  <button
                    className={styles.deleteButton}
                    onClick={() => removeFromWishlist(item._id)}
                  >
                    <DeleteIcon />
                  </button>
                </div>
              </div>
            ))}
          </div>
          <div>
            <div className={styles.recentDate}>2025.10.10</div>
            {Array.from({ length: 5 }).map((item, idx) => (
              <div className={styles.recentsItemList} key={item + idx}>
                <div className={styles.left}>
                  <div className={styles.productImage}>
                    <img
                      src={"/images/product_ex.png"}
                      alt={"title"}
                      width={97}
                      height={97}
                    />
                  </div>
                  <div className={styles.info}>
                    <p className={styles.title}>
                      MLB 뉴욕양키스 볼캡 모자 32CPHL111-50L
                    </p>
                    <div className={styles.priceBox}>
                      <p className={styles.oldPrice}>110,002원</p>
                      <p className={styles.discount}>
                        25%
                        <span className={styles.newPrice}>89,002원</span>
                      </p>
                      <p className={styles.truck}>
                        <TruckShippingIcon />
                        <span>무료배송</span>
                      </p>
                    </div>
                  </div>
                </div>

                <div className={styles.right}>
                  <button
                    className={styles.deleteButton}
                    onClick={() => removeFromWishlist(item._id)}
                  >
                    <DeleteIcon />
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </>
  );
};

export default ManageMyProfile;

const SmileIcon = () => (
  <svg
    width="19"
    height="18"
    viewBox="0 0 19 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M9.5 2.15625C5.7203 2.15625 2.65625 5.2203 2.65625 9C2.65625 12.7797 5.7203 15.8438 9.5 15.8438C13.2797 15.8438 16.3438 12.7797 16.3438 9C16.3438 5.2203 13.2797 2.15625 9.5 2.15625ZM1.34375 9C1.34375 4.49543 4.99543 0.84375 9.5 0.84375C14.0046 0.84375 17.6562 4.49543 17.6562 9C17.6562 13.5046 14.0046 17.1562 9.5 17.1562C4.99543 17.1562 1.34375 13.5046 1.34375 9Z"
      fill="var(--text-757575)"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M7.02325 10.1039C6.80534 9.81599 6.39543 9.75812 6.10625 9.975C5.8163 10.1925 5.75754 10.6038 5.975 10.8937L6.5 10.5C5.975 10.8938 5.975 10.8937 5.975 10.8937L5.97567 10.8946L5.97645 10.8957L5.97832 10.8981L5.98336 10.9047L5.99856 10.9242C6.01096 10.9398 6.02792 10.9608 6.04933 10.9863C6.09212 11.0373 6.15299 11.1068 6.23127 11.1884C6.38729 11.3512 6.61557 11.566 6.91089 11.7807C7.49899 12.2084 8.38168 12.6562 9.5 12.6562C10.6183 12.6562 11.501 12.2084 12.0891 11.7807C12.3844 11.566 12.6127 11.3512 12.7687 11.1884C12.847 11.1068 12.9079 11.0373 12.9507 10.9863C12.9721 10.9608 12.989 10.9398 13.0014 10.9242L13.0166 10.9047L13.0217 10.8981L13.0236 10.8957L13.0243 10.8946C13.0243 10.8946 13.025 10.8938 12.5 10.5L13.025 10.8937C13.2425 10.6038 13.1837 10.1925 12.8937 9.975C12.6046 9.75812 12.1947 9.81599 11.9767 10.1039M11.9767 10.1039L11.9724 10.1095C11.9674 10.1158 11.9583 10.1271 11.9453 10.1426C11.9193 10.1736 11.8776 10.2214 11.8211 10.2803C11.7076 10.3988 11.5374 10.559 11.3171 10.7193C10.874 11.0416 10.2567 11.3438 9.5 11.3438C8.74332 11.3438 8.12601 11.0416 7.68286 10.7193C7.46255 10.559 7.29239 10.3988 7.17888 10.2803C7.1224 10.2214 7.08073 10.1736 7.05467 10.1426C7.04166 10.1271 7.03262 10.1158 7.02762 10.1095L7.02325 10.1039M11.9753 10.1059L11.976 10.1049L11.9767 10.1039"
      fill="var(--text-757575)"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M6.59375 6.75C6.59375 6.38756 6.88756 6.09375 7.25 6.09375H7.2575C7.61994 6.09375 7.91375 6.38756 7.91375 6.75C7.91375 7.11244 7.61994 7.40625 7.2575 7.40625H7.25C6.88756 7.40625 6.59375 7.11244 6.59375 6.75Z"
      fill="var(--text-757575)"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M11.0938 6.75C11.0938 6.38756 11.3876 6.09375 11.75 6.09375H11.7575C12.1199 6.09375 12.4137 6.38756 12.4137 6.75C12.4137 7.11244 12.1199 7.40625 11.7575 7.40625H11.75C11.3876 7.40625 11.0938 7.11244 11.0938 6.75Z"
      fill="var(--text-757575)"
    />
  </svg>
);
const EmailIcon = () => (
  <svg
    width="19"
    height="18"
    viewBox="0 0 19 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M3.5 3.65625C3.03743 3.65625 2.65625 4.03744 2.65625 4.5V13.5C2.65625 13.9626 3.03743 14.3438 3.5 14.3438H15.5C15.9626 14.3438 16.3437 13.9626 16.3437 13.5V4.5C16.3437 4.03744 15.9626 3.65625 15.5 3.65625H3.5ZM1.34375 4.5C1.34375 3.31256 2.31256 2.34375 3.5 2.34375H15.5C16.6874 2.34375 17.6562 3.31256 17.6562 4.5V13.5C17.6562 14.6874 16.6874 15.6562 15.5 15.6562H3.5C2.31256 15.6562 1.34375 14.6874 1.34375 13.5V4.5Z"
      fill="var(--text-757575)"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M1.46237 4.12367C1.67022 3.82675 2.07941 3.75454 2.37633 3.96238L9.5 8.94895L16.6237 3.96238C16.9206 3.75454 17.3298 3.82675 17.5376 4.12367C17.7455 4.42058 17.6733 4.82978 17.3763 5.03762L9.87633 10.2876C9.65037 10.4458 9.34962 10.4458 9.12366 10.2876L1.62366 5.03762C1.32674 4.82978 1.25453 4.42058 1.46237 4.12367Z"
      fill="var(--text-757575)"
    />
  </svg>
);
const PhoneIcon = () => (
  <svg
    width="19"
    height="18"
    viewBox="0 0 19 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M3.33164 2.14573C3.28991 2.16068 3.23826 2.17919 3.18369 2.19739C3.12599 2.21662 3.07692 2.25215 2.91521 2.41385C2.86388 2.46518 2.83105 2.51045 2.77375 2.68234C2.766 2.7056 2.75695 2.7284 2.74665 2.75064C2.74514 2.75791 2.74191 2.7753 2.73911 2.80611C2.73369 2.86571 2.73263 2.93569 2.73246 3.0325C3.0253 5.25965 3.74502 7.3971 4.95044 9.24068L4.95768 9.252C6.02986 10.9675 7.5335 12.4711 9.24899 13.5433L9.26031 13.5506C11.1222 14.768 13.1862 15.5504 15.383 15.7685C15.576 15.7682 15.6332 15.7641 15.7437 15.7272C15.9155 15.67 15.9608 15.6371 16.0121 15.5858C16.1738 15.4241 16.2094 15.375 16.2286 15.3173C16.2384 15.2878 16.2503 15.2591 16.2642 15.2313C16.2833 15.1932 16.3049 15.1398 16.3212 15.0802C16.3376 15.0202 16.3449 14.9667 16.3449 14.9248V12.6748C16.3449 12.499 16.2865 12.3381 16.0832 11.9956C15.9865 11.877 15.8568 11.7988 15.6224 11.7485C14.8813 11.6619 14.0871 11.4202 13.4186 11.1974C13.3743 11.1826 13.3316 11.1631 13.2914 11.1393C13.2815 11.1383 13.2655 11.1373 13.2418 11.1373C13.1962 11.1373 13.1452 11.1404 13.0666 11.1454L13.0623 11.1456C12.9917 11.1501 12.8982 11.1561 12.8012 11.1561C12.7689 11.1561 12.7438 11.1621 12.7092 11.1807C12.6661 11.2039 12.6052 11.2489 12.5152 11.3388L11.5402 12.3138C11.3324 12.5216 11.0119 12.566 10.7555 12.4224C8.77492 11.3133 7.11273 9.65106 6.00359 7.67046C5.86003 7.41409 5.90437 7.09354 6.11213 6.88578L7.04074 5.95715C7.17339 5.75634 7.24917 5.627 7.28951 5.46565C7.31538 5.36218 7.30392 5.3164 7.22289 4.99248C7.22214 4.9895 7.22139 4.98649 7.22063 4.98346L7.22001 4.98159C7.00483 4.33616 6.76588 3.61942 6.67865 2.81746C6.65088 2.71606 6.61435 2.61617 6.56806 2.52874C6.51534 2.42916 6.45974 2.36404 6.40742 2.3248C6.38257 2.30617 6.35909 2.2858 6.33713 2.26384C6.24941 2.17613 6.04832 2.08105 5.82618 2.08105H3.57617C3.54359 2.08105 3.51487 2.08522 3.46475 2.10026C3.43546 2.10904 3.40242 2.12043 3.35392 2.13775C3.34687 2.14027 3.33942 2.14294 3.33164 2.14573ZM2.84689 0.924201C3.00545 0.865834 3.26973 0.768555 3.57617 0.768555H5.82618C6.33798 0.768555 6.86955 0.961203 7.23164 1.30315C7.68888 1.66625 7.87892 2.205 7.96283 2.54065C7.97054 2.5715 7.976 2.60287 7.97917 2.63451C8.04578 3.30064 8.24576 3.90835 8.47374 4.59228C8.47905 4.60821 8.48374 4.62435 8.48782 4.64064C8.49429 4.66654 8.50161 4.6942 8.50937 4.72356C8.57519 4.97255 8.67309 5.3429 8.56282 5.78397C8.45998 6.19536 8.25565 6.50146 8.11107 6.71804C8.10638 6.72507 8.10176 6.732 8.0972 6.73883C8.07323 6.77479 8.04576 6.80829 8.01521 6.83885L7.39973 7.45433C8.29613 8.89701 9.52897 10.1298 10.9717 11.0262L11.5871 10.4108C11.8592 10.1387 12.2431 9.84356 12.8012 9.84356C12.8521 9.84356 12.9068 9.84037 12.9834 9.8355L12.9934 9.83487C13.0614 9.83054 13.1513 9.82481 13.2418 9.82481C13.4092 9.82481 13.6549 9.84238 13.8988 9.97387C14.5504 10.1893 15.2179 10.3831 15.7986 10.4476C15.8175 10.4497 15.8363 10.4526 15.8549 10.4563C16.3393 10.5532 16.8031 10.7669 17.1512 11.2311C17.1647 11.2491 17.1773 11.2678 17.1889 11.2872C17.4196 11.6717 17.6574 12.1062 17.6574 12.6748V14.9248C17.6574 15.2585 17.5574 15.5667 17.4577 15.7781C17.3287 16.127 17.0963 16.3584 16.9597 16.4944C16.953 16.5011 16.9465 16.5076 16.9402 16.5138C16.6916 16.7625 16.4369 16.8797 16.1587 16.9724C15.8323 17.0812 15.5929 17.0811 15.3664 17.0811L15.3512 17.0811C15.3301 17.0811 15.309 17.08 15.2879 17.078C12.8488 16.842 10.5755 15.9775 8.54768 14.6528C6.66745 13.4764 5.02464 11.8336 3.84825 9.95333C2.51343 7.90972 1.73573 5.56445 1.42532 3.1588C1.42173 3.13095 1.41992 3.10289 1.41992 3.07481C1.41992 3.07096 1.41992 3.06706 1.41992 3.06311C1.41991 2.95867 1.41988 2.82052 1.432 2.68727C1.44307 2.56544 1.46768 2.39821 1.54076 2.2314C1.63167 1.96719 1.7492 1.72371 1.98714 1.48577C1.9934 1.47951 1.9999 1.47298 2.00663 1.46622C2.14846 1.32379 2.39411 1.07708 2.76864 0.95224C2.79065 0.944904 2.81687 0.93525 2.84689 0.924201Z"
      fill="var(--text-757575)"
    />
  </svg>
);
const PasswordIcon = () => (
  <svg
    width="19"
    height="18"
    viewBox="0 0 19 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M3.5 12.0938C3.86244 12.0938 4.15625 12.3876 4.15625 12.75V13.5C4.15625 13.7238 4.24509 13.9384 4.40332 14.0967C4.56155 14.2549 4.77622 14.3438 5 14.3438H6.5C6.86244 14.3438 7.15625 14.6376 7.15625 15C7.15625 15.3624 6.86244 15.6562 6.5 15.6562H5C4.42813 15.6562 3.87996 15.4288 3.47559 15.0244C3.07121 14.62 2.84375 14.0719 2.84375 13.5V12.75C2.84375 12.3876 3.13756 12.0938 3.5 12.0938ZM15.5 12.0938C15.8624 12.0938 16.1562 12.3876 16.1562 12.75V13.5C16.1562 14.0719 15.9288 14.62 15.5244 15.0244C15.12 15.4288 14.5719 15.6562 14 15.6562H12.5C12.1376 15.6562 11.8438 15.3624 11.8438 15C11.8438 14.6376 12.1376 14.3438 12.5 14.3438H14C14.2238 14.3438 14.4384 14.2549 14.5967 14.0967C14.7549 13.9384 14.8438 13.7238 14.8438 13.5V12.75C14.8438 12.3876 15.1376 12.0938 15.5 12.0938ZM4.25 7.875C4.87132 7.875 5.375 8.37868 5.375 9C5.375 9.62132 4.87132 10.125 4.25 10.125C3.62868 10.125 3.125 9.62132 3.125 9C3.125 8.37868 3.62868 7.875 4.25 7.875ZM7.75098 7.875C8.3723 7.875 8.87598 8.37868 8.87598 9C8.87598 9.62132 8.3723 10.125 7.75098 10.125C7.12966 10.125 6.62598 9.62132 6.62598 9C6.62598 8.37868 7.12966 7.875 7.75098 7.875ZM11.249 7.875C11.8703 7.875 12.374 8.37868 12.374 9C12.374 9.62132 11.8703 10.125 11.249 10.125C10.6277 10.125 10.124 9.62132 10.124 9C10.124 8.37868 10.6277 7.875 11.249 7.875ZM14.75 7.875C15.3713 7.875 15.875 8.37868 15.875 9C15.875 9.62132 15.3713 10.125 14.75 10.125C14.1287 10.125 13.625 9.62132 13.625 9C13.625 8.37868 14.1287 7.875 14.75 7.875ZM6.5 2.34375C6.86244 2.34375 7.15625 2.63756 7.15625 3C7.15625 3.36244 6.86244 3.65625 6.5 3.65625H5C4.77622 3.65625 4.56155 3.74509 4.40332 3.90332C4.24509 4.06155 4.15625 4.27622 4.15625 4.5V5.25C4.15625 5.61244 3.86244 5.90625 3.5 5.90625C3.13756 5.90625 2.84375 5.61244 2.84375 5.25V4.5C2.84375 3.92813 3.07121 3.37996 3.47559 2.97559C3.87996 2.57121 4.42813 2.34375 5 2.34375H6.5ZM14 2.34375C14.5719 2.34375 15.12 2.57121 15.5244 2.97559C15.9288 3.37996 16.1562 3.92813 16.1562 4.5V5.25C16.1562 5.61244 15.8624 5.90625 15.5 5.90625C15.1376 5.90625 14.8438 5.61244 14.8438 5.25V4.5C14.8438 4.27622 14.7549 4.06155 14.5967 3.90332C14.4384 3.74509 14.2238 3.65625 14 3.65625H12.5C12.1376 3.65625 11.8438 3.36244 11.8438 3C11.8438 2.63756 12.1376 2.34375 12.5 2.34375H14Z"
      fill="var(--text-757575)"
    />
  </svg>
);
const AddressCompanyIcon = () => (
  <svg
    width="21"
    height="20"
    viewBox="0 0 21 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M18.8346 17.833L2.16797 17.833"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M15.5 17.5V4.7C15.5 3.19151 15.5 2.43726 14.9142 1.96863C14.3284 1.5 13.3856 1.5 11.5 1.5H9.5C7.61438 1.5 6.67157 1.5 6.08579 1.96863C5.5 2.43726 5.5 3.19151 5.5 4.7V17.5"
      stroke="var(--text-3f3f3f)"
    />
    <path
      d="M17.5 17.5V9.25C17.5 8.14649 17.5 7.59474 17.3074 7.19839C17.224 7.02681 17.1169 6.87948 16.9921 6.76483C16.7038 6.5 16.3025 6.5 15.5 6.5"
      stroke="var(--text-3f3f3f)"
    />
    <path
      d="M3.5 17.5V9.25C3.5 8.14649 3.5 7.59474 3.69261 7.19839C3.77599 7.02681 3.88313 6.87948 4.00792 6.76483C4.29618 6.5 4.69745 6.5 5.5 6.5"
      stroke="var(--text-3f3f3f)"
    />
    <path
      d="M10.5 17.833V15.333"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M8.83594 4.66699H12.1693"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M8.83594 7.16699H12.1693"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M8.83594 9.66699H12.1693"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M8.83594 12.167H12.1693"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
  </svg>
);
const AddressHomeIcon = () => (
  <svg
    width="21"
    height="20"
    viewBox="0 0 21 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M18.8307 18.333L2.16406 18.333"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M2.16406 9.16628L8.93566 3.749C9.8487 3.01856 11.1461 3.01856 12.0591 3.749L18.8307 9.16628"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M13.4141 4.58333V2.91667C13.4141 2.68655 13.6006 2.5 13.8307 2.5H15.9141C16.1442 2.5 16.3307 2.68655 16.3307 2.91667V7.08333"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M3.83594 18.3337V7.91699"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M17.1641 18.3337V7.91699"
      stroke="var(--text-3f3f3f)"
      stroke-linecap="round"
    />
    <path
      d="M13 18.3337V14.167C13 12.9885 13 12.3992 12.6339 12.0331C12.2678 11.667 11.6785 11.667 10.5 11.667C9.32149 11.667 8.73223 11.667 8.36612 12.0331C8 12.3992 8 12.9885 8 14.167V18.3337"
      stroke="var(--text-3f3f3f)"
    />
    <path
      d="M12.1693 7.91667C12.1693 8.83714 11.4231 9.58333 10.5026 9.58333C9.58213 9.58333 8.83594 8.83714 8.83594 7.91667C8.83594 6.99619 9.58213 6.25 10.5026 6.25C11.4231 6.25 12.1693 6.99619 12.1693 7.91667Z"
      stroke="var(--text-3f3f3f)"
    />
  </svg>
);
const IconStarLevel = () => (
  <svg
    width="30"
    height="30"
    viewBox="0 0 30 30"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M13.3784 11.6374C13.7574 11.5534 14.0534 11.2574 14.1374 10.8784L15.0234 6.89237C15.2554 5.84837 16.7434 5.84837 16.9754 6.89237L17.8614 10.8784C17.9454 11.2574 18.2414 11.5534 18.6204 11.6374L22.6064 12.5234C23.6504 12.7554 23.6504 14.2434 22.6064 14.4754L18.6204 15.3614C18.2414 15.4454 17.9454 15.7414 17.8614 16.1204L16.9754 20.1064C16.7434 21.1504 15.2554 21.1504 15.0234 20.1064L14.1374 16.1204C14.0534 15.7414 13.7574 15.4454 13.3784 15.3614L9.39237 14.4754C8.34837 14.2434 8.34837 12.7554 9.39237 12.5234L13.3784 11.6374Z"
      fill="white"
    />
    <path
      d="M8.06022 19.8192C8.43922 19.7352 8.73522 19.4392 8.81922 19.0602L9.09022 17.8402C9.18722 17.4022 9.81122 17.4022 9.90822 17.8402L10.1792 19.0602C10.2632 19.4392 10.5592 19.7352 10.9382 19.8192L12.1582 20.0902C12.5962 20.1872 12.5962 20.8112 12.1582 20.9082L10.9382 21.1792C10.5592 21.2632 10.2632 21.5592 10.1792 21.9382L9.90822 23.1582C9.81122 23.5962 9.18722 23.5962 9.09022 23.1582L8.81922 21.9382C8.73522 21.5592 8.43922 21.2632 8.06022 21.1792L6.84022 20.9082C6.40222 20.8112 6.40222 20.1872 6.84022 20.0902L8.06022 19.8192Z"
      fill="white"
    />
  </svg>
);

const IconShopping = () => (
  <svg
    width="25"
    height="24"
    viewBox="0 0 25 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M4.12896 12.0291C4.66612 9.34329 4.93471 8.00036 5.82218 7.13543C5.9862 6.97557 6.16366 6.8301 6.35258 6.70061C7.37476 6 8.74428 6 11.4833 6H13.1863C15.9253 6 17.2948 6 18.317 6.70061C18.5059 6.8301 18.6834 6.97557 18.8474 7.13543C19.7349 8.00036 20.0034 9.34329 20.5406 12.0291C21.3118 15.8851 21.6974 17.8131 20.8097 19.1793C20.649 19.4267 20.4614 19.6555 20.2504 19.8616C19.0848 21 17.1186 21 13.1863 21H11.4833C7.55094 21 5.58476 21 4.41918 19.8616C4.20814 19.6555 4.02054 19.4267 3.85982 19.1793C2.97215 17.8131 3.35775 15.8851 4.12896 12.0291Z"
      stroke="var(--purple-dark)"
      stroke-width="1.5"
    />
    <path
      d="M9.33325 6V5C9.33325 3.34315 10.6764 2 12.3333 2C13.9901 2 15.3333 3.34315 15.3333 5V6"
      stroke="var(--purple-dark)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
    <path
      d="M9.50513 15C9.91696 16.1652 11.0282 17 12.3344 17C13.6406 17 14.7519 16.1652 15.1637 15"
      stroke="var(--purple-dark)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
  </svg>
);
const IconHandStar = () => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10.8613 3.36335C11.3679 2.45445 11.6213 2 12 2C12.3787 2 12.6321 2.45445 13.1387 3.36335L13.2698 3.59849C13.4138 3.85677 13.4858 3.98591 13.598 4.07112C13.7103 4.15633 13.8501 4.18796 14.1296 4.25122L14.3842 4.30881C15.3681 4.53142 15.86 4.64273 15.977 5.01909C16.0941 5.39546 15.7587 5.78763 15.088 6.57197L14.9144 6.77489C14.7238 6.99777 14.6285 7.10922 14.5857 7.24709C14.5428 7.38496 14.5572 7.53364 14.586 7.83102L14.6122 8.10176C14.7136 9.14824 14.7644 9.67148 14.4579 9.90409C14.1515 10.1367 13.6909 9.92462 12.7697 9.50047L12.5314 9.39073C12.2696 9.2702 12.1387 9.20994 12 9.20994C11.8613 9.20994 11.7304 9.2702 11.4686 9.39073L11.2303 9.50047C10.3091 9.92462 9.84847 10.1367 9.54206 9.90409C9.23565 9.67148 9.28635 9.14824 9.38776 8.10176L9.41399 7.83102C9.44281 7.53364 9.45722 7.38496 9.41435 7.24709C9.37147 7.10922 9.27617 6.99777 9.08557 6.77489L8.91204 6.57197C8.2413 5.78763 7.90593 5.39546 8.02297 5.01909C8.14001 4.64273 8.63194 4.53142 9.61581 4.30881L9.87035 4.25122C10.1499 4.18796 10.2897 4.15633 10.402 4.07112C10.5142 3.98591 10.5862 3.85677 10.7302 3.59849L10.8613 3.36335Z"
      stroke="var(--text-121212)"
      stroke-width="1.5"
    />
    <path
      d="M19.4306 7.68168C19.684 7.22723 19.8106 7 20 7C20.1894 7 20.316 7.22722 20.5694 7.68167L20.6349 7.79925C20.7069 7.92839 20.7429 7.99296 20.799 8.03556C20.8551 8.07817 20.925 8.09398 21.0648 8.12561L21.1921 8.15441C21.684 8.26571 21.93 8.32136 21.9885 8.50955C22.047 8.69773 21.8794 8.89381 21.544 9.28598L21.4572 9.38744C21.3619 9.49889 21.3143 9.55461 21.2928 9.62354C21.2714 9.69248 21.2786 9.76682 21.293 9.91551L21.3061 10.0509C21.3568 10.5741 21.3822 10.8357 21.229 10.952C21.0758 11.0683 20.8455 10.9623 20.3849 10.7502L20.2657 10.6954C20.1348 10.6351 20.0694 10.605 20 10.605C19.9306 10.605 19.8652 10.6351 19.7343 10.6954L19.6151 10.7502C19.1545 10.9623 18.9242 11.0683 18.771 10.952C18.6178 10.8357 18.6432 10.5741 18.6939 10.0509L18.707 9.91551C18.7214 9.76682 18.7286 9.69248 18.7072 9.62354C18.6857 9.55461 18.6381 9.49889 18.5428 9.38744L18.456 9.28599C18.1206 8.89381 17.953 8.69773 18.0115 8.50955C18.07 8.32136 18.316 8.26571 18.8079 8.15441L18.9352 8.12561C19.075 8.09398 19.1449 8.07817 19.201 8.03556C19.2571 7.99296 19.2931 7.92839 19.3651 7.79925L19.4306 7.68168Z"
      stroke="var(--text-121212)"
      stroke-width="1.5"
    />
    <path
      d="M3.43063 7.68168C3.68396 7.22723 3.81063 7 4 7C4.18937 7 4.31604 7.22722 4.56937 7.68167L4.63491 7.79925C4.7069 7.92839 4.74289 7.99296 4.79901 8.03556C4.85513 8.07817 4.92503 8.09398 5.06482 8.12561L5.19209 8.15441C5.68403 8.26571 5.93 8.32136 5.98852 8.50955C6.04704 8.69773 5.87935 8.89381 5.54398 9.28598L5.45722 9.38744C5.36191 9.49889 5.31426 9.55461 5.29283 9.62354C5.27139 9.69248 5.27859 9.76682 5.293 9.91551L5.30612 10.0509C5.35682 10.5741 5.38218 10.8357 5.22897 10.952C5.07576 11.0683 4.84547 10.9623 4.38487 10.7502L4.2657 10.6954C4.13481 10.6351 4.06937 10.605 4 10.605C3.93063 10.605 3.86519 10.6351 3.7343 10.6954L3.61513 10.7502C3.15454 10.9623 2.92424 11.0683 2.77103 10.952C2.61782 10.8357 2.64318 10.5741 2.69388 10.0509L2.707 9.91551C2.72141 9.76682 2.72861 9.69248 2.70717 9.62354C2.68574 9.55461 2.63809 9.49889 2.54278 9.38744L2.45602 9.28599C2.12065 8.89381 1.95296 8.69773 2.01148 8.50955C2.07 8.32136 2.31597 8.26571 2.80791 8.15441L2.93518 8.12561C3.07497 8.09398 3.14487 8.07817 3.20099 8.03556C3.25711 7.99296 3.29311 7.92839 3.36509 7.79925L3.43063 7.68168Z"
      stroke="var(--text-121212)"
      stroke-width="1.5"
    />
    <path
      d="M4 21.3884H6.25993C7.27079 21.3884 8.29253 21.4937 9.27633 21.6964C11.0166 22.0549 12.8488 22.0983 14.6069 21.8138C15.4738 21.6734 16.326 21.4589 17.0975 21.0865C17.7939 20.7504 18.6469 20.2766 19.2199 19.7459C19.7921 19.216 20.388 18.3487 20.8109 17.6707C21.1736 17.0894 20.9982 16.3762 20.4245 15.943C19.7873 15.4619 18.8417 15.462 18.2046 15.9433L16.3974 17.3084C15.697 17.8375 14.932 18.3245 14.0206 18.4699C13.911 18.4874 13.7962 18.5033 13.6764 18.5172M13.6764 18.5172C13.6403 18.5214 13.6038 18.5254 13.5668 18.5292M13.6764 18.5172C13.8222 18.486 13.9669 18.396 14.1028 18.2775C14.746 17.7161 14.7866 16.77 14.2285 16.1431C14.0991 15.9977 13.9475 15.8764 13.7791 15.7759C10.9817 14.1074 6.62942 15.3782 4 17.2429M13.6764 18.5172C13.6399 18.525 13.6033 18.5292 13.5668 18.5292M13.5668 18.5292C13.0434 18.5829 12.4312 18.5968 11.7518 18.5326"
      stroke="var(--text-121212)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
  </svg>
);

const IconBill = () => (
  <svg
    width="25"
    height="24"
    viewBox="0 0 25 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M17.4215 2H7.91152C6.75265 2 6.17321 2 5.70589 2.16261C4.81972 2.47096 4.12398 3.18719 3.82446 4.09946C3.6665 4.58055 3.6665 5.17705 3.6665 6.37006V20.3742C3.6665 21.2324 4.6515 21.6878 5.2746 21.1176C5.64068 20.7826 6.19233 20.7826 6.55841 21.1176L7.0415 21.5597C7.68309 22.1468 8.64992 22.1468 9.2915 21.5597C9.93309 20.9726 10.8999 20.9726 11.5415 21.5597C12.1831 22.1468 13.1499 22.1468 13.7915 21.5597C14.4331 20.9726 15.3999 20.9726 16.0415 21.5597C16.6831 22.1468 17.6499 22.1468 18.2915 21.5597L18.7746 21.1176C19.1407 20.7826 19.6923 20.7826 20.0584 21.1176C20.6815 21.6878 21.6665 21.2324 21.6665 20.3742V6.37006C21.6665 5.17705 21.6665 4.58055 21.5086 4.09946C21.209 3.18719 20.5133 2.47096 19.6271 2.16261C19.1598 2 18.5804 2 17.4215 2Z"
      stroke="var(--text-121212)"
      stroke-width="1.5"
    />
    <path
      d="M11.1665 11L17.6665 11"
      stroke="var(--text-121212)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
    <path
      d="M7.6665 11H8.1665"
      stroke="var(--text-121212)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
    <path
      d="M7.6665 7.5H8.1665"
      stroke="var(--text-121212)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
    <path
      d="M7.6665 14.5H8.1665"
      stroke="var(--text-121212)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
    <path
      d="M11.1665 7.5H17.6665"
      stroke="var(--text-121212)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
    <path
      d="M11.1665 14.5H17.6665"
      stroke="var(--text-121212)"
      stroke-width="1.5"
      stroke-linecap="round"
    />
  </svg>
);

const IconTruck = () => (
  <svg
    width="25"
    height="24"
    viewBox="0 0 25 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M1.33325 3.99922C1.33325 3.59922 1.63325 3.19922 2.13325 3.19922H13.8333C14.2333 3.19922 14.6333 3.59922 14.6333 3.99922V4.29922H19.1333C19.4333 4.29922 19.6333 4.39922 19.8333 4.69922L23.0333 10.0992C23.1333 10.1992 23.1333 10.3992 23.1333 10.4992V16.9992C23.1333 17.3992 22.8333 17.7992 22.3333 17.7992H20.9333C20.6333 18.9992 19.5333 19.9992 18.0333 19.9992C16.6333 19.9992 15.5333 19.0992 15.1333 17.7992H10.3333C9.93325 19.0992 8.83325 19.9992 7.53325 19.9992C6.23325 19.9992 5.03325 19.0992 4.63325 17.7992H3.23325C2.73325 17.7992 2.33325 17.3992 2.33325 16.9992V12.6992C2.33325 12.2992 2.63325 11.8992 3.13325 11.8992C3.53325 11.8992 3.93325 12.2992 3.93325 12.6992V16.1992H4.53325C4.93325 14.9992 6.03325 13.9992 7.53325 13.9992C8.83325 13.9992 10.0333 14.8992 10.4333 16.1992H13.2333V4.89922H2.23325C1.63325 4.89922 1.33325 4.59922 1.33325 3.99922ZM14.7333 5.99922V9.69922H21.1333L18.8333 5.99922H14.7333ZM21.7333 11.3992H14.7333V16.1992H15.3333C15.6333 14.9992 16.7333 13.9992 18.2333 13.9992C19.6333 13.9992 20.7333 14.8992 21.1333 16.1992H21.7333V11.3992ZM2.33325 8.39922C2.33325 7.99922 2.63325 7.49922 3.23325 7.49922H7.53325C7.93325 7.49922 8.33325 7.99922 8.33325 8.39922C8.33325 8.79922 8.03325 9.19922 7.53325 9.19922H3.23325C2.73325 9.19922 2.33325 8.89922 2.33325 8.39922ZM7.53325 15.6992C6.83325 15.6992 6.23325 16.2992 6.23325 16.9992C6.23325 17.6992 6.83325 18.2992 7.53325 18.2992C8.23325 18.2992 8.83325 17.6992 8.83325 16.9992C8.83325 16.2992 8.23325 15.6992 7.53325 15.6992ZM18.2333 15.6992C17.5333 15.6992 16.9333 16.2992 16.9333 16.9992C16.9333 17.6992 17.5333 18.2992 18.2333 18.2992C18.9333 18.2992 19.5333 17.6992 19.5333 16.9992C19.5333 16.2992 18.9333 15.6992 18.2333 15.6992Z"
      fill="var(--text-121212)"
    />
  </svg>
);
export const IconHeart = () => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M8.96173 18.9111L9.42605 18.3221L8.96173 18.9111ZM12 5.50088L11.4596 6.02098C11.463 6.02445 11.4664 6.02789 11.4698 6.0313L12 5.50088ZM15.0383 18.9111L15.5026 19.5001L15.0383 18.9111ZM13.4698 8.03058C13.7627 8.32342 14.2376 8.32333 14.5304 8.03039C14.8233 7.73744 14.8232 7.26257 14.5302 6.96973L14 7.50015L13.4698 8.03058ZM8.96173 18.9111L9.42605 18.3221C7.91039 17.1273 6.25307 15.9605 4.93829 14.48C3.64922 13.0285 2.75 11.3347 2.75 9.13734H2H1.25C1.25 11.8029 2.3605 13.8363 3.81672 15.476C5.24723 17.0868 7.07077 18.3755 8.49742 19.5001L8.96173 18.9111ZM2 9.13734H2.75C2.75 6.98647 3.96537 5.18277 5.62436 4.42444C7.23607 3.68772 9.40166 3.88282 11.4596 6.02098L12 5.50088L12.5404 4.98078C10.0985 2.44377 7.26409 2.02563 5.00076 3.0602C2.78471 4.07317 1.25 6.42527 1.25 9.13734H2ZM8.96173 18.9111L8.49742 19.5001C9.00965 19.9039 9.55954 20.3345 10.1168 20.6602C10.6739 20.9857 11.3096 21.2502 12 21.2502V20.5002V19.7502C11.6904 19.7502 11.3261 19.6295 10.8736 19.3651C10.4213 19.1008 9.95208 18.7368 9.42605 18.3221L8.96173 18.9111ZM15.0383 18.9111L15.5026 19.5001C16.9292 18.3755 18.7528 17.0868 20.1833 15.476C21.6395 13.8363 22.75 11.8029 22.75 9.13734H22H21.25C21.25 11.3347 20.3508 13.0285 19.0617 14.48C17.7469 15.9605 16.0896 17.1273 14.574 18.3221L15.0383 18.9111ZM22 9.13734H22.75C22.75 6.42527 21.2153 4.07317 18.9992 3.0602C16.7359 2.02563 13.9015 2.44377 11.4596 4.98078L12 5.50088L12.5404 6.02098C14.5983 3.88282 16.7639 3.68772 18.3756 4.42444C20.0346 5.18277 21.25 6.98647 21.25 9.13734H22ZM15.0383 18.9111L14.574 18.3221C14.0479 18.7368 13.5787 19.1008 13.1264 19.3651C12.6739 19.6295 12.3096 19.7502 12 19.7502V20.5002V21.2502C12.6904 21.2502 13.3261 20.9857 13.8832 20.6602C14.4405 20.3345 14.9903 19.9039 15.5026 19.5001L15.0383 18.9111ZM12 5.50088L11.4698 6.0313L13.4698 8.03058L14 7.50015L14.5302 6.96973L12.5302 4.97045L12 5.50088Z"
      fill="var(--text-121212)"
    />
  </svg>
);

const IconSetting = () => (
  <svg
    width="25"
    height="24"
    viewBox="0 0 25 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle
      cx="12.6665"
      cy="12"
      r="3"
      stroke="var(--text-121212)"
      stroke-width="1.5"
    />
    <path
      d="M14.4304 2.15224C14.0629 2 13.5969 2 12.665 2C11.7331 2 11.2672 2 10.8997 2.15224C10.4096 2.35523 10.0203 2.74458 9.81727 3.23463C9.72461 3.45834 9.68834 3.7185 9.67415 4.09799C9.6533 4.65568 9.36729 5.17189 8.88398 5.45093C8.40068 5.72996 7.81063 5.71954 7.31723 5.45876C6.98148 5.2813 6.73804 5.18262 6.49797 5.15102C5.97208 5.08178 5.44022 5.22429 5.0194 5.5472C4.70378 5.78938 4.47081 6.1929 4.00487 6.99993C3.53893 7.80697 3.30596 8.21048 3.25403 8.60491C3.1848 9.1308 3.32731 9.66266 3.65022 10.0835C3.7976 10.2756 4.00474 10.437 4.32623 10.639C4.79884 10.936 5.10293 11.4419 5.1029 12C5.10287 12.5581 4.79879 13.0639 4.32622 13.3608C4.00469 13.5629 3.79752 13.7244 3.65012 13.9165C3.32721 14.3373 3.1847 14.8691 3.25393 15.395C3.30586 15.7894 3.53883 16.193 4.00477 17C4.47071 17.807 4.70369 18.2106 5.0193 18.4527C5.44012 18.7756 5.97198 18.9181 6.49788 18.8489C6.73793 18.8173 6.98136 18.7186 7.31708 18.5412C7.81051 18.2804 8.4006 18.27 8.88394 18.549C9.36728 18.8281 9.65329 19.3443 9.67415 19.9021C9.68835 20.2815 9.72461 20.5417 9.81727 20.7654C10.0203 21.2554 10.4096 21.6448 10.8997 21.8478C11.2672 22 11.7331 22 12.665 22C13.5969 22 14.0629 22 14.4304 21.8478C14.9205 21.6448 15.3098 21.2554 15.5128 20.7654C15.6055 20.5417 15.6417 20.2815 15.6559 19.902C15.6768 19.3443 15.9627 18.8281 16.446 18.549C16.9294 18.2699 17.5195 18.2804 18.0129 18.5412C18.3486 18.7186 18.592 18.8172 18.8321 18.8488C19.358 18.9181 19.8898 18.7756 20.3107 18.4527C20.6263 18.2105 20.8592 17.807 21.3252 16.9999C21.7911 16.1929 22.0241 15.7894 22.076 15.395C22.1453 14.8691 22.0027 14.3372 21.6798 13.9164C21.5324 13.7243 21.3253 13.5628 21.0038 13.3608C20.5312 13.0639 20.2271 12.558 20.2272 11.9999C20.2272 11.4418 20.5312 10.9361 21.0038 10.6392C21.3253 10.4371 21.5325 10.2757 21.6799 10.0835C22.0028 9.66273 22.1454 9.13087 22.0761 8.60497C22.0242 8.21055 21.7912 7.80703 21.3253 7C20.8593 6.19297 20.6264 5.78945 20.3108 5.54727C19.8899 5.22436 19.3581 5.08185 18.8322 5.15109C18.5921 5.18269 18.3487 5.28136 18.013 5.4588C17.5195 5.71959 16.9295 5.73002 16.4461 5.45096C15.9628 5.17191 15.6768 4.65566 15.6559 4.09794C15.6417 3.71848 15.6054 3.45833 15.5128 3.23463C15.3098 2.74458 14.9205 2.35523 14.4304 2.15224Z"
      stroke="var(--text-121212)"
      stroke-width="1.5"
    />
  </svg>
);
