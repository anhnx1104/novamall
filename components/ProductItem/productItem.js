"use client";
import styles from "./productItem.module.css";
import clsx from "clsx";
import Link from "next/link";
import { useTranslation } from "react-i18next";
import {
  HeartOffIcon,
  HeartOnIcon,
  ProductCartIcon,
  ProductStarDarkIcon,
  ProductStarLightIcon,
} from "~/components/Ui/Icons/icons";
import { useState } from "react";

function ProductItem({ product, size, mode, basic, size168, hideCart, tag }) {
  const { t } = useTranslation();
  const [isHeart, setIsHeart] = useState(false);
  return (
    <div
      className={clsx(
        styles.card,
        basic ? styles.basic : styles.card,
        size === "sm" ? styles.sm : styles.lg,
        mode == "dark" ? styles.dark : styles.light,
        size168 ? styles.size168 : styles.size168
      )}
    >
      <div className={styles.imageWrapper}>
        <Link
          href={`/product/디어스트-다담은-한알육수-멸치베이스4g-x60정-240g-5개-00yo69ju`}
        >
          <img
            src={product.image}
            alt={product.name}
            className={styles.image}
          />
        </Link>
        {tag && (
          <div className={styles.tag + " " + styles[tag]}>
            {tag === "special" ? "특별상품" : ""}
            {tag === "general" ? "일반상품" : ""}
          </div>
        )}
        <button
          className={styles.heartBtn}
          onClick={() => setIsHeart(!isHeart)}
        >
          {isHeart ? <HeartOnIcon /> : <HeartOffIcon />}
        </button>
      </div>
      <button className={styles.cartBtnMobile}>장바구니 담기</button>

      <div className={styles.info}>
        <p className={styles.title}>{product.name}</p>
        <div className={styles.priceBox}>
          <p className={styles.oldPrice}>
            {product.oldPrice.toLocaleString()}원
          </p>
          <p className={styles.discount}>
            {product.discount}%
            <span className={styles.newPrice}>
              {product.newPrice.toLocaleString()}원
            </span>
          </p>
        </div>

        <div className={styles.bottom}>
          <div className={styles.rating}>
            {mode == "dark" ? <ProductStarDarkIcon /> : <StarIcon />}
            <span className={styles.ratingText}>{product.rating}</span>
            <span className={styles.reviewCount}>
              ({product.reviews.toLocaleString()})
            </span>
          </div>
          {!hideCart && (
            <button className={styles.cartBtn}>
              <ProductCartIcon />
            </button>
          )}
        </div>
      </div>
    </div>
  );
}

export default ProductItem;

const StarIcon = () => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g filter="url(#filter0_f_918_72057)">
      <path
        d="M9.65925 4.23957C9.68697 4.16871 9.73417 4.1081 9.79484 4.06544C9.85552 4.02278 9.92693 4 10 4C10.0731 4 10.1445 4.02278 10.2052 4.06544C10.2658 4.1081 10.313 4.16871 10.3407 4.23957L11.7332 7.74977C11.7593 7.81546 11.8021 7.87233 11.857 7.91413C11.912 7.95594 11.9768 7.98105 12.0445 7.98672L15.6603 8.29028C15.9873 8.31775 16.1196 8.74563 15.8706 8.96883L13.1158 11.4427C13.0644 11.4888 13.026 11.5489 13.005 11.6164C12.984 11.6839 12.981 11.7561 12.9966 11.8252L13.8386 15.5236C13.8555 15.5978 13.8511 15.6756 13.8259 15.7471C13.8006 15.8187 13.7557 15.8808 13.6968 15.9257C13.6379 15.9705 13.5677 15.996 13.495 15.999C13.4222 16.002 13.3503 15.9824 13.2882 15.9425L10.192 13.9611C10.1342 13.9241 10.0677 13.9045 10 13.9045C9.93225 13.9045 9.86581 13.9241 9.808 13.9611L6.71181 15.9432C6.64973 15.9831 6.57778 16.0027 6.50504 15.9997C6.43231 15.9967 6.36206 15.9712 6.30316 15.9263C6.24426 15.8815 6.19936 15.8194 6.17412 15.7478C6.14889 15.6763 6.14445 15.5985 6.16138 15.5243L7.00341 11.8252C7.01903 11.7561 7.01616 11.6838 6.99512 11.6164C6.97407 11.5489 6.93568 11.4888 6.88415 11.4427L4.12936 8.96883C4.07389 8.91927 4.03369 8.85357 4.01387 8.78005C3.99405 8.70652 3.9955 8.62849 4.01802 8.55583C4.04055 8.48317 4.08314 8.41915 4.1404 8.37188C4.19767 8.3246 4.26703 8.29621 4.33971 8.29028L7.95553 7.98672C8.02319 7.98105 8.08804 7.95594 8.14296 7.91413C8.19787 7.87233 8.24072 7.81546 8.26679 7.74977L9.65925 4.23957Z"
        fill="#A16BFF"
      />
      <path
        d="M9.65925 4.23957C9.68697 4.16871 9.73417 4.1081 9.79484 4.06544C9.85552 4.02278 9.92693 4 10 4C10.0731 4 10.1445 4.02278 10.2052 4.06544C10.2658 4.1081 10.313 4.16871 10.3407 4.23957L11.7332 7.74977C11.7593 7.81546 11.8021 7.87233 11.857 7.91413C11.912 7.95594 11.9768 7.98105 12.0445 7.98672L15.6603 8.29028C15.9873 8.31775 16.1196 8.74563 15.8706 8.96883L13.1158 11.4427C13.0644 11.4888 13.026 11.5489 13.005 11.6164C12.984 11.6839 12.981 11.7561 12.9966 11.8252L13.8386 15.5236C13.8555 15.5978 13.8511 15.6756 13.8259 15.7471C13.8006 15.8187 13.7557 15.8808 13.6968 15.9257C13.6379 15.9705 13.5677 15.996 13.495 15.999C13.4222 16.002 13.3503 15.9824 13.2882 15.9425L10.192 13.9611C10.1342 13.9241 10.0677 13.9045 10 13.9045C9.93225 13.9045 9.86581 13.9241 9.808 13.9611L6.71181 15.9432C6.64973 15.9831 6.57778 16.0027 6.50504 15.9997C6.43231 15.9967 6.36206 15.9712 6.30316 15.9263C6.24426 15.8815 6.19936 15.8194 6.17412 15.7478C6.14889 15.6763 6.14445 15.5985 6.16138 15.5243L7.00341 11.8252C7.01903 11.7561 7.01616 11.6838 6.99512 11.6164C6.97407 11.5489 6.93568 11.4888 6.88415 11.4427L4.12936 8.96883C4.07389 8.91927 4.03369 8.85357 4.01387 8.78005C3.99405 8.70652 3.9955 8.62849 4.01802 8.55583C4.04055 8.48317 4.08314 8.41915 4.1404 8.37188C4.19767 8.3246 4.26703 8.29621 4.33971 8.29028L7.95553 7.98672C8.02319 7.98105 8.08804 7.95594 8.14296 7.91413C8.19787 7.87233 8.24072 7.81546 8.26679 7.74977L9.65925 4.23957Z"
        fill="url(#paint0_linear_918_72057)"
        fill-opacity="0.8"
      />
    </g>
    <path
      d="M9.65925 4.23957C9.68697 4.16871 9.73417 4.1081 9.79484 4.06544C9.85552 4.02278 9.92693 4 10 4C10.0731 4 10.1445 4.02278 10.2052 4.06544C10.2658 4.1081 10.313 4.16871 10.3407 4.23957L11.7332 7.74977C11.7593 7.81546 11.8021 7.87233 11.857 7.91413C11.912 7.95594 11.9768 7.98105 12.0445 7.98672L15.6603 8.29028C15.9873 8.31775 16.1196 8.74563 15.8706 8.96883L13.1158 11.4427C13.0644 11.4888 13.026 11.5489 13.005 11.6164C12.984 11.6839 12.981 11.7561 12.9966 11.8252L13.8386 15.5236C13.8555 15.5978 13.8511 15.6756 13.8259 15.7471C13.8006 15.8187 13.7557 15.8808 13.6968 15.9257C13.6379 15.9705 13.5677 15.996 13.495 15.999C13.4222 16.002 13.3503 15.9824 13.2882 15.9425L10.192 13.9611C10.1342 13.9241 10.0677 13.9045 10 13.9045C9.93225 13.9045 9.86581 13.9241 9.808 13.9611L6.71181 15.9432C6.64973 15.9831 6.57778 16.0027 6.50504 15.9997C6.43231 15.9967 6.36206 15.9712 6.30316 15.9263C6.24426 15.8815 6.19936 15.8194 6.17412 15.7478C6.14889 15.6763 6.14445 15.5985 6.16138 15.5243L7.00341 11.8252C7.01903 11.7561 7.01616 11.6838 6.99512 11.6164C6.97407 11.5489 6.93568 11.4888 6.88415 11.4427L4.12936 8.96883C4.07389 8.91927 4.03369 8.85357 4.01387 8.78005C3.99405 8.70652 3.9955 8.62849 4.01802 8.55583C4.04055 8.48317 4.08314 8.41915 4.1404 8.37188C4.19767 8.3246 4.26703 8.29621 4.33971 8.29028L7.95553 7.98672C8.02319 7.98105 8.08804 7.95594 8.14296 7.91413C8.19787 7.87233 8.24072 7.81546 8.26679 7.74977L9.65925 4.23957Z"
      fill="#A16BFF"
    />
    <path
      d="M9.65925 4.23957C9.68697 4.16871 9.73417 4.1081 9.79484 4.06544C9.85552 4.02278 9.92693 4 10 4C10.0731 4 10.1445 4.02278 10.2052 4.06544C10.2658 4.1081 10.313 4.16871 10.3407 4.23957L11.7332 7.74977C11.7593 7.81546 11.8021 7.87233 11.857 7.91413C11.912 7.95594 11.9768 7.98105 12.0445 7.98672L15.6603 8.29028C15.9873 8.31775 16.1196 8.74563 15.8706 8.96883L13.1158 11.4427C13.0644 11.4888 13.026 11.5489 13.005 11.6164C12.984 11.6839 12.981 11.7561 12.9966 11.8252L13.8386 15.5236C13.8555 15.5978 13.8511 15.6756 13.8259 15.7471C13.8006 15.8187 13.7557 15.8808 13.6968 15.9257C13.6379 15.9705 13.5677 15.996 13.495 15.999C13.4222 16.002 13.3503 15.9824 13.2882 15.9425L10.192 13.9611C10.1342 13.9241 10.0677 13.9045 10 13.9045C9.93225 13.9045 9.86581 13.9241 9.808 13.9611L6.71181 15.9432C6.64973 15.9831 6.57778 16.0027 6.50504 15.9997C6.43231 15.9967 6.36206 15.9712 6.30316 15.9263C6.24426 15.8815 6.19936 15.8194 6.17412 15.7478C6.14889 15.6763 6.14445 15.5985 6.16138 15.5243L7.00341 11.8252C7.01903 11.7561 7.01616 11.6838 6.99512 11.6164C6.97407 11.5489 6.93568 11.4888 6.88415 11.4427L4.12936 8.96883C4.07389 8.91927 4.03369 8.85357 4.01387 8.78005C3.99405 8.70652 3.9955 8.62849 4.01802 8.55583C4.04055 8.48317 4.08314 8.41915 4.1404 8.37188C4.19767 8.3246 4.26703 8.29621 4.33971 8.29028L7.95553 7.98672C8.02319 7.98105 8.08804 7.95594 8.14296 7.91413C8.19787 7.87233 8.24072 7.81546 8.26679 7.74977L9.65925 4.23957Z"
      fill="url(#paint1_linear_918_72057)"
      fill-opacity="0.8"
    />
    <defs>
      <filter
        id="filter0_f_918_72057"
        x="0"
        y="0"
        width="20"
        height="20"
        filterUnits="userSpaceOnUse"
        color-interpolation-filters="sRGB"
      >
        <feFlood flood-opacity="0" result="BackgroundImageFix" />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="BackgroundImageFix"
          result="shape"
        />
        <feGaussianBlur
          stdDeviation="2"
          result="effect1_foregroundBlur_918_72057"
        />
      </filter>
      <linearGradient
        id="paint0_linear_918_72057"
        x1="10"
        y1="9.04783"
        x2="10"
        y2="16"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="white" stop-opacity="0" />
        <stop offset="1" stop-color="white" />
      </linearGradient>
      <linearGradient
        id="paint1_linear_918_72057"
        x1="10"
        y1="9.04783"
        x2="10"
        y2="16"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="white" stop-opacity="0" />
        <stop offset="1" stop-color="white" />
      </linearGradient>
    </defs>
  </svg>
);
